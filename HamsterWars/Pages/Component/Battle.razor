@using DataAccessLibrary
@using DataAccessLibrary.Models
@using Services
@inject IHamsterData _db
@inject IResultData _bd

@page "/battle"
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">


<h3 class="text-center"> Choose the cutest Hamster</h3>

@if (hamsterList is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="column" style="float: left">
            <div style="float: left;">
                <img class="img-thumbnail" src="/Content/Photos/@competitorOne.ImgName">
                <p class="text-center">@competitorOne.Name</p>
                <p class="text-left">Age:&nbsp;@competitorOne.Age</p>
                <p class="text-left">Favorite food:&nbsp;@competitorOne.FavFood</p>
                <p class="text-left">Favorite activity:&nbsp;@competitorOne.Loves</p>
                @if (battleDone)
                {
                    <p>Wins: @competitorOne.Wins Defeats: @competitorOne.Defeats</p>
                }
                else
                {
                    <button type="button" @onclick="(() => BattleResult(competitorOne,competitorTwo))" class="btn btn-primary">Like</button>
                }
            </div>
        </div>
        <div class="column justify-content-center">
            @if (battleDone)
            {
                <button type="button" class="btn btn-primary" onfocus="location.reload()">Next battle</button>
            }
            else
            {
                <br /> <h1 class="text-center">VS</h1>
            }
        </div>
        <div class="column" style="float: right">
            <div style="float: right;">
                <img class="img-thumbnail" src="/Content/Photos/@competitorTwo.ImgName">
                <p class="text-center">@competitorTwo.Name</p>
                <p class="text-left">Age:&nbsp;@competitorTwo.Age</p>
                <p class="text-left">Favorite food:&nbsp;@competitorTwo.FavFood</p>
                <p class="text-left">Favorite activity:&nbsp;@competitorTwo.Loves</p>
                @if (battleDone)
                {
                    <p>Wins: @competitorTwo.Wins Defeats: @competitorTwo.Defeats</p>
                }
                else
                {
                    <button type="button" @onclick="(() => BattleResult(competitorTwo,competitorOne))" class="btn btn-primary">Like</button>
                }
            </div>
        </div>
    </div>
}
@code
{
    private List<HamsterModel>? hamsterList;
    private bool battleDone = false;

    private HamsterModel? competitorOne;
    private HamsterModel? competitorTwo;
    private ResultModel Result = new ResultModel();

    protected override async Task OnInitializedAsync()
    {
        if (hamsterList == null)
        {
            hamsterList = await _db.GetHamsters();

        }
        (competitorOne, competitorTwo) = Randomizer.Gethamster(hamsterList);
    }
    private async Task BattleResult(HamsterModel? winner, HamsterModel? loser)
    {
        await _db.InsertLikes(winner);
        await _db.InsertDefeat(loser);
        Result.WinnerId = winner.Id;
        Result.LoserId = loser.Id;
        await _bd.InsertBattle(Result);
        battleDone = true;
    }
}

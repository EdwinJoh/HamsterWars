@page "/history"

@inject IHamsterData _db
@inject IResultData _rb

<h3>History</h3>
<button type="button" @onclick="RemoveAll" class="btn btn-danger float-end">Remove all</button>
<table class="table table-dark">
    <thead>
        <tr>
            <th scope="col">Game</th>
            <th scope="col">Winning Hamster</th>
            <th scope="col">Losing Hamster</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var result in resultList)
        {
            GetLoser(result.LoserId);
            GetWinner(result.WinnerId);
            <tr>
                <th scope="row">@result.Id</th>
                <td>@Winner.Name</td>
                <td>@Loser.Name</td>
                <td><button id="removeOne" type="button" onfocus="location.reload()" @onclick="(() => RemoveOne(result))" class="btn btn-danger">Remove Match</button></td>
            </tr>
        }
    </tbody>
</table>

@code {

    List<HamsterModel> hamsterList = new List<HamsterModel>();
    List<ResultModel> resultList = new List<ResultModel>();
    public HamsterModel? Winner { get; set; }
    public HamsterModel? Loser { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (hamsterList.Count == 0 || resultList.Count == 0)
        {
            hamsterList = await _db.GetHamsters();
            resultList = await _rb.Getresult();
        }
    }
    private void GetLoser(int id)
    {
        if (hamsterList.Any(i => i.Id == id))
        {
            Loser = hamsterList.Where(c => c.Id == id).Single();
        }
        else
        {
            Loser.Name = "Unknown";
        }
    }
    private void GetWinner(int id)
    {
        if (hamsterList.Any(i => i.Id == id))
        {
            Winner = hamsterList.Where(s => s.Id == id).Single();

        }
        else
        {
            Winner.Name = "Unknown";
        }

    }
    private async Task RemoveOne(ResultModel result)
    {
        await _rb.RemoveOneResult(result);
    }
    private async Task RemoveAll()
    {
        await _rb.RemoveAllResults();

    }

    }

@page "/gallery"

@inject IHamsterData _db
@inject NavigationManager _nav

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">


<h4>Our Hamsters</h4>
@if (hamsterList is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button @onclick="@(()=>_nav.NavigateTo("/addHamster"))" type="button" class="btn btn-primary">Add Hamster</button>
    <div class="row">
        @foreach (var hamster in hamsterList)
        {
            <div class="column">
                <div class="flip-card">
                    <div class="flip-card-inner">
                        <div class="flip-card-front">
                            <img src="/Content/Photos/@hamster.ImgName" onerror="this.onerror=null; this.src='/Content/Photos/hamster.jpg.jpg'" alt="" style="width:300px;height:300px;">
                        </div>
                        <div class="flip-card-back">
                            <h1><a href="/matchwinners/@hamster.Id">@hamster.Name</a></h1>
                            <p>Age:@hamster.Age</p>
                            <p>Favorite Food:@hamster.FavFood</p>
                            <p>Favorite Activity:@hamster.Loves</p>
                            <button type="button" @onclick="(() => RemoveHamster(hamster))" class="btn btn-danger">REMOVE</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    
    private List<HamsterModel> hamsterList = new List<HamsterModel>();
    protected override async Task OnInitializedAsync()
    {
        if (hamsterList.Count == 0)
        {
            hamsterList = await _db.GetHamsters();
        }
    }
    /// <summary>
    /// Mothod for removing hamster from the application
    /// </summary>
      private async Task RemoveHamster(HamsterModel hamster)
    {
        await _db.RemoveHamster(hamster);
        _nav.NavigateTo(_nav.Uri, forceLoad: true);
    }
}
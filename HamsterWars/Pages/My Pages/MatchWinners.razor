@page "/matchwinners/{id:int}"
@inject IHamsterData _db
@inject IResultData _rb
<h1>Battle History</h1>

@if (SelectedHamster is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <img class="img-thumbnail w-25 center" src="/Content/Photos/@SelectedHamster.ImgName">
    <div class="center">
        <p>Name : @SelectedHamster.Name</p>
        <p>Age: @SelectedHamster.Age</p>
        <p>Favorite Food: @SelectedHamster.FavFood</p>
        <p>Favorite Activity: @SelectedHamster.Loves</p>
    </div>
    <table class="table table-dark">
        <thead>
            <tr>
                <th scope="col">Game</th>
                <th scope="col">Winner</th>
                <th scope="col">Looser</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var result in results)
            {
                @if (result.WinnerId == Id)
                {
                    <tr>
                        <td>@result.Id</td>
                        <td>@SelectedHamster.Name</td>
                        <td>@GetLoser(result.LoserId).Name</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private HamsterModel? SelectedHamster { get; set; }
    private HamsterModel? LoserHamster { get; set; }

    private List<HamsterModel> hamsters = new List<HamsterModel>();
    private List<ResultModel> results = new List<ResultModel>();

    protected override async Task OnInitializedAsync()
    {
        if (hamsters.Count == 0 || results.Count == 0)
        {
            hamsters = await _db.GetHamsters();
            results = await _rb.Getresult();
            SelectedHamster = hamsters.First(h => h.Id == Id);
        }
    }
    /// <summary>
    /// et the loserhamster from GetLoser in services
    /// </summary>
    /// <param name="loserId">Loser id from the results.</param>
    /// <returns>losing hamster object</returns>
    private HamsterModel GetLoser(int loserId)
    {
        LoserHamster = Application.Services.GetResults.GetHamsterResult(loserId, hamsters);
       
        return LoserHamster;
    }
    }
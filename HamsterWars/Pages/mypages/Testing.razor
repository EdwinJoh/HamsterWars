@using DataAccessLibrary
@inject IHamsterData _db
@page "/test"
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">


<h3 class="text-center"> Choose the cutest Hamster</h3>

@if (hamstersList is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row row-no-margin center">
        @foreach (var hamster in RandomHamster())
        {
            <div class="col-xs-12 col-sm-6 col-no-padding center">
                <h1 class="text-center">@hamster.Name</h1>
                <div class="col-xs-12 col-sm-6 col-no-padding ">
                    <a href="#"><img class="thumbnail img-responsive " src="/Content/Photos/@hamster.ImgName"></a>
                    <h4>Wins = @hamster.Wins</h4>
                    <button type="button" @onclick="(() => InsertLike(hamster))" class="btn btn-info">Like</button>
                </div>
            </div>
        }
    </div>
}


@code
{
    private List<Hamsters> hamstersList = new List<Hamsters>();
    protected override async Task OnInitializedAsync()
    {
        hamstersList = await _db.GetHamsters();
    }

    private List<Hamsters> RandomHamster() // se till så att samma bild inte kan komma 2 gånger in i listan
    {
        List<Hamsters> templist = new List<Hamsters>();
        for (int i = 0; i < 3; i++)
        {
            Random rnd = new Random();
            int rndId = rnd.Next(1, 40);
            foreach (Hamsters h in hamstersList)
            {
                if (h.Id == rndId)
                {
                    i++;
                    templist.Add(h);
                }
            }
        }
        return templist;
    }
    private async Task InsertLike(Hamsters hamster)
    {
        hamster.Wins++;
        hamster.Games++;
        await _db.InsertLikes(hamster);
    }

}
